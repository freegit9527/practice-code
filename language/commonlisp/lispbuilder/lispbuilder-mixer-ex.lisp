(ql:quickload '(:lispbuilder-sdl-mixer :lispbuilder-sdl))
(sdl:with-init (sdl:sdl-init-video sdl:sdl-init-audio)
  (sdl:window 350 410)
  (sdl-mixer:OPEN-AUDIO)
  (let ((music (sdl-mixer:load-music
                #P"/home/liu/Hack/language/commonlisp/lispbuilder/baseball.ogg")))
    (sdl-mixer:play-music music :loop t)
    (sdl:with-events ()
      (:quit-event ()
                   (sdl-mixer:Halt-Music)
                   (sdl-mixer:free music)
                   (sdl-mixer:close-audio)
                   t)
      (:key-down-event ()
                       (sdl:push-quit-event))
      (:idle ()
             (sdl:clear-display sdl:*black*)
             (sdl:draw-surface-at-*
              (sdl:load-image "./yinlin.png"
                              :alpha 90)
              (- (/ 350 2) (floor (/ 145 2)))
              (- (/ 410 2) (/ 220 2))
              ;; (- (sdl:mouse-x) 150)
              ;; (- (sdl:mouse-y) 70)
              )
             (cond ((sdl:mouse-left-p)
                    (sdl-mixer:pause-music))
                   ((sdl:mouse-right-p)
                    (sdl-mixer:resume-music)))
             (sdl:update-display)))))

(sdl-mixer:init-mixer :ogg)
(when  (sdl-mixer:open-audio)
  (setf yinlin (sdl-mixer:load-sample #P"/home/liu/Hack/language/commonlisp/lispbuilder/baseball.ogg"))
  (sdl-mixer:register-sample-finished
   (lambda (channel)
     (declare (ignore channel))
     (format t "sample finished on channel: ~S" channel)
     nil))
  (sdl-mixer:allocate-channels 16)
  (sdl-mixer:play-sample yinlin :loop t))
(sdl-mixer:halt-sample :channel t)
(sdl-mixer:close-audio)

(when  (sdl-mixer:open-audio)
  (setf yinlin (sdl-mixer:load-sample #P"/home/liu/Hack/language/commonlisp/lispbuilder/sample.wav"))
  (setf yinlin (sdl-mixer:load-music #P"/home/liu/Hack/language/commonlisp/lispbuilder/sample.wav"))
  (sdl-mixer:register-sample-finished
   (lambda (channel)
     (declare (ignore channel))
     (format t "sample finished on channel: ~S" channel)
     nil))
  (sdl-mixer:allocate-channels 16)
  (sdl-mixer:play-sample yinlin :loop t))
